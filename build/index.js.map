{"version":3,"sources":["../src/index.js"],"names":["memCache","cache","Cache","cacheMiddleware","duration","req","res","next","key","originalUrl","url","cacheContent","get","console","log","send","JSON","parse","sendResponse","body","put","app","listen","problem","x","dosScgController","findXYZ","indexOf","y","z","a","b","findB","c","findC","json","origin","destination","findBestRoute","response","post","sendStatus"],"mappings":"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","sourcesContent":["import express from 'express';\nimport bodyparser from 'body-parser'\nimport cache from 'memory-cache'\nimport 'dotenv/config';\n\nimport dosScgController from './controllers/dosScgController'\n\n// configure cache middleware\nlet memCache = new cache.Cache();\n\n// duration seconds\nlet cacheMiddleware = (duration) => {\n    return (req, res, next) => {\n        let key =  '__express__' + req.originalUrl || req.url\n        let cacheContent = memCache.get(key);\n        if(cacheContent){\n          console.log('cacheContent: ', cacheContent)\n            res.send( JSON.parse(cacheContent) );\n            return\n        }else{\n            res.sendResponse = res.send\n            res.send = (body) => {\n                memCache.put(key,body,duration*1000);\n                res.sendResponse(body)\n            }\n            next()\n        }\n    }\n}\nconst app = express();\n\n// app.use(bodyparser);\n\napp.listen(3000, () =>\n  console.log('Example app listening on port 3000!'),\n)\n\napp.get(\"/findXYZ\", cacheMiddleware(600), (req, res) => {\n  const problem = ['X', 'Y', 5, 9, 15, 23, 'Z']\n  const x = dosScgController.findXYZ(problem.indexOf('X'))\n  const y = dosScgController.findXYZ(problem.indexOf('Y'))\n  const z = dosScgController.findXYZ(problem.indexOf('Z'))\n\n  res.send ({\n    x,\n    y,\n    z\n  });\n})\n\napp.get(\"/findBC\", cacheMiddleware(600), (req, res) => {\n  const a = 21\n  const b = dosScgController.findB(a)\n  const c = dosScgController.findC(a)\n\n  res.json ({\n    b,\n    c\n  })\n})\n\napp.get(\"/findBestPath\", cacheMiddleware(600), async (req, res) => {\n  const origin = \"Central World\"\n  const destination = \"SCG Bangsue\"\n\n  const response = await dosScgController.findBestRoute(origin, destination)\n  // console.log('response: ', response)\n\n  res.json(response)\n})\n\napp.post(\"/webhook\", async (req, res) => {\n  res.sendStatus(200)\n})"],"file":"index.js"}